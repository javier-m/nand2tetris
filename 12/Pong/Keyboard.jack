// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static Array keyboardMap;

    /** Initializes the keyboard. */
    function void init() {
      let keyboardMap = 24576;

      return;
    }

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newLine()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
      return keyboardMap[0];
    }

    /**
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character
     * of the pressed key.
     */
    function char readChar() {
      var int keyPressed;

      do Output.printChar(0);

      let keyPressed = 0;
      while (keyPressed = 0) {
        let keyPressed = Keyboard.keyPressed();
      }
      while (~(Keyboard.keyPressed() = 0)) {
        // wait for the key to be released
      }

      do Output.backSpace();
      do Output.printChar(keyPressed);
      return keyPressed;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
      var String line;
      var char c;

      do Output.printString(message);

      let line = String.new(64);

      let c = 0 ;

      while (true) {
        let c = Keyboard.readChar();
        if (c = String.newLine()) {
          return line;
        }
        else {
          if (c = String.backSpace()) {
            if (line.length() > 0) {
              do line.eraseLastChar();
              //do Output.backSpace();
            }
          }
          else {
            do line.appendChar(c);
          }
        }
      }

      return line;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces.
     */
    function int readInt(String message) {
      var String line;
      var char c;

      do Output.printString(message);

      let line = String.new(64);

      let c = 0 ;

      while (true) {
        let c = Keyboard.readChar();
        if (c = String.newLine()) {
          return line.intValue();
        }
        else {
          if (c = String.backSpace()) {
            if (line.length() > 0) {
              do line.eraseLastChar();
              do Output.backSpace();
            }
          }
          else {
            do line.appendChar(c);
          }
        }
      }

      return line.intValue();
    }
}
