function Screen.init 0
push constant 16
call Array.new 1
pop static 1
push static 1
push constant 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 1
push constant 1
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 1
push constant 2
add
push constant 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 1
push constant 3
add
push constant 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 1
push constant 4
add
push constant 16
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 1
push constant 5
add
push constant 32
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 1
push constant 6
add
push constant 64
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 1
push constant 7
add
push constant 128
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 1
push constant 8
add
push constant 256
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 1
push constant 9
add
push constant 512
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 1
push constant 10
add
push constant 1024
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 1
push constant 11
add
push constant 2048
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 1
push constant 12
add
push constant 4096
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 1
push constant 13
add
push constant 8192
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 1
push constant 14
add
push constant 16384
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 1
push constant 15
add
push constant 1
neg
push constant 32767
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
neg
pop static 0
push constant 0
return
function Screen.clearScreen 1
push constant 16384
pop local 0
push constant 0
call Screen.setColor 1
pop temp 0
label Screen.clearScreen.while_1.L1
push local 0
push constant 24576
lt
not
if-goto Screen.clearScreen.while_1.L2
push local 0
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto Screen.clearScreen.while_1.L1
label Screen.clearScreen.while_1.L2
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.drawPixel 3
push constant 16384
push argument 0
push constant 16
call Math.divide 2
add
push argument 1
push constant 32
call Math.multiply 2
add
pop local 0
push argument 0
push argument 0
push constant 16
call Math.divide 2
push constant 16
call Math.multiply 2
sub
pop local 2
push local 0
call Memory.peek 1
push local 2
push static 0
call Screen.setBit 3
pop local 1
push local 0
push local 1
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawLine 7
push constant 0
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
push argument 0
push argument 2
eq
not
if-goto Screen.drawLine.if_1.L1
push argument 1
push argument 3
lt
not
if-goto Screen.drawLine.if_1.if_1.L1
push argument 1
pop local 5
push argument 3
pop local 6
goto Screen.drawLine.if_1.if_1.L2
label Screen.drawLine.if_1.if_1.L1
push argument 3
pop local 5
push argument 1
pop local 6
label Screen.drawLine.if_1.if_1.L2
label Screen.drawLine.if_1.while_1.L1
push local 1
push local 6
push local 5
sub
lt
not
if-goto Screen.drawLine.if_1.while_1.L2
push local 1
push constant 1
add
pop local 1
push argument 0
push local 5
push local 1
add
call Screen.drawPixel 2
pop temp 0
goto Screen.drawLine.if_1.while_1.L1
label Screen.drawLine.if_1.while_1.L2
goto Screen.drawLine.if_1.L2
label Screen.drawLine.if_1.L1
push argument 1
push argument 3
eq
not
if-goto Screen.drawLine.if_1.if_2.L1
push argument 0
push argument 2
lt
not
if-goto Screen.drawLine.if_1.if_2.if_1.L1
push argument 0
pop local 3
push argument 2
pop local 4
goto Screen.drawLine.if_1.if_2.if_1.L2
label Screen.drawLine.if_1.if_2.if_1.L1
push argument 2
pop local 3
push argument 0
pop local 4
label Screen.drawLine.if_1.if_2.if_1.L2
label Screen.drawLine.if_1.if_2.while_2.L1
push local 0
push local 4
push local 3
sub
lt
not
if-goto Screen.drawLine.if_1.if_2.while_2.L2
push local 0
push constant 1
add
pop local 0
push local 3
push local 0
add
push argument 1
call Screen.drawPixel 2
pop temp 0
goto Screen.drawLine.if_1.if_2.while_2.L1
label Screen.drawLine.if_1.if_2.while_2.L2
goto Screen.drawLine.if_1.if_2.L2
label Screen.drawLine.if_1.if_2.L1
push argument 2
push argument 0
gt
not
if-goto Screen.drawLine.if_1.if_2.if_2.L1
push argument 0
pop local 3
push argument 2
pop local 4
push argument 1
pop local 5
push argument 3
pop local 6
goto Screen.drawLine.if_1.if_2.if_2.L2
label Screen.drawLine.if_1.if_2.if_2.L1
push argument 2
pop local 3
push argument 0
pop local 4
push argument 3
pop local 5
push argument 1
pop local 6
label Screen.drawLine.if_1.if_2.if_2.L2
push argument 2
push argument 0
sub
push argument 3
push argument 1
sub
call Math.multiply 2
push constant 0
gt
not
if-goto Screen.drawLine.if_1.if_2.if_3.L1
label Screen.drawLine.if_1.if_2.if_3.while_3.L1
push local 0
push local 4
push local 3
sub
lt
push local 1
push local 6
push local 5
sub
lt
and
not
if-goto Screen.drawLine.if_1.if_2.if_3.while_3.L2
push local 3
push local 0
add
push local 5
push local 1
add
call Screen.drawPixel 2
pop temp 0
push local 2
push constant 0
lt
not
if-goto Screen.drawLine.if_1.if_2.if_3.while_3.if_1.L1
push local 0
push constant 1
add
pop local 0
push local 2
push local 6
add
push local 5
sub
pop local 2
goto Screen.drawLine.if_1.if_2.if_3.while_3.if_1.L2
label Screen.drawLine.if_1.if_2.if_3.while_3.if_1.L1
push local 1
push constant 1
add
pop local 1
push local 2
push local 4
sub
push local 3
add
pop local 2
label Screen.drawLine.if_1.if_2.if_3.while_3.if_1.L2
goto Screen.drawLine.if_1.if_2.if_3.while_3.L1
label Screen.drawLine.if_1.if_2.if_3.while_3.L2
goto Screen.drawLine.if_1.if_2.if_3.L2
label Screen.drawLine.if_1.if_2.if_3.L1
label Screen.drawLine.if_1.if_2.if_3.while_4.L1
push local 0
push local 4
push local 3
sub
lt
push local 1
push local 6
push local 5
sub
gt
and
not
if-goto Screen.drawLine.if_1.if_2.if_3.while_4.L2
push local 3
push local 0
add
push local 5
push local 1
add
call Screen.drawPixel 2
pop temp 0
push local 2
push constant 0
lt
not
if-goto Screen.drawLine.if_1.if_2.if_3.while_4.if_2.L1
push local 1
push constant 1
sub
pop local 1
push local 2
push local 4
add
push local 3
sub
pop local 2
goto Screen.drawLine.if_1.if_2.if_3.while_4.if_2.L2
label Screen.drawLine.if_1.if_2.if_3.while_4.if_2.L1
push local 0
push constant 1
add
pop local 0
push local 2
push local 6
add
push local 5
sub
pop local 2
label Screen.drawLine.if_1.if_2.if_3.while_4.if_2.L2
goto Screen.drawLine.if_1.if_2.if_3.while_4.L1
label Screen.drawLine.if_1.if_2.if_3.while_4.L2
label Screen.drawLine.if_1.if_2.if_3.L2
label Screen.drawLine.if_1.if_2.L2
label Screen.drawLine.if_1.L2
push constant 0
return
function Screen.drawRectangle 1
push argument 1
pop local 0
label Screen.drawRectangle.while_1.L1
push local 0
push argument 3
gt
not
not
if-goto Screen.drawRectangle.while_1.L2
push argument 0
push local 0
push argument 2
push local 0
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto Screen.drawRectangle.while_1.L1
label Screen.drawRectangle.while_1.L2
push constant 0
return
function Screen.drawCircle 2
push argument 2
neg
pop local 0
label Screen.drawCircle.while_1.L1
push local 0
push argument 2
gt
not
not
if-goto Screen.drawCircle.while_1.L2
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
pop local 1
push argument 0
push local 1
sub
push argument 1
push local 0
add
push argument 0
push local 1
add
push argument 1
push local 0
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto Screen.drawCircle.while_1.L1
label Screen.drawCircle.while_1.L2
push constant 0
return
function Screen.setBit 0
push argument 0
push static 1
push argument 1
add
pop pointer 1
push that 0
not
or
push constant 1
neg
eq
not
if-goto Screen.setBit.if_1.L1
push argument 2
push constant 0
eq
not
if-goto Screen.setBit.if_1.if_1.L1
push argument 0
push static 1
push argument 1
add
pop pointer 1
push that 0
sub
return
goto Screen.setBit.if_1.if_1.L2
label Screen.setBit.if_1.if_1.L1
push argument 0
return
label Screen.setBit.if_1.if_1.L2
goto Screen.setBit.if_1.L2
label Screen.setBit.if_1.L1
push argument 2
push constant 0
eq
not
if-goto Screen.setBit.if_1.if_2.L1
push argument 0
return
goto Screen.setBit.if_1.if_2.L2
label Screen.setBit.if_1.if_2.L1
push argument 0
push static 1
push argument 1
add
pop pointer 1
push that 0
add
return
label Screen.setBit.if_1.if_2.L2
label Screen.setBit.if_1.L2
